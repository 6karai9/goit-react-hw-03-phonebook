{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactFrom.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameId","shortid","numberId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","generate","props","addContact","reset","this","className","s","wrap","formWrap","onSubmit","label","htmlFor","placeholder","autoComplete","type","onChange","pattern","title","required","btn","Component","PropTypes","propTypes","string","func","ContactList","filteredContacts","onDelete","list","map","listItem","onClick","Filter","App","contacts","filter","obj","find","toLowerCase","alert","deleteContact","contactId","prevState","changeFilter","getFilteredContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fcc775b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Filter_wrap__dHwUj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"ContactFrom_wrap__2uVck\",\"formWrap\":\"ContactFrom_formWrap__1tuGW\",\"label\":\"ContactFrom_label__2P3Fg\",\"btn\":\"ContactFrom_btn__2R16n\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactFrom.module.css';\nimport shortid from 'shortid';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameId = shortid();\n  numberId = shortid();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n\n    const contact = {\n      id: shortid.generate(),\n      name: name,\n      number: number,\n    };\n\n    this.props.addContact(contact);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { handleSubmit, handleChange, nameId, numberId } = this;\n    const { name, number } = this.state;\n    return (\n      <div className={s.wrap}>\n        <form className={s.formWrap} onSubmit={handleSubmit}>\n          <label className={s.label} htmlFor={nameId}>\n            <input\n              id={nameId}\n              placeholder=\"enter name\"\n              autoComplete=\"off\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <label className={s.label} htmlFor={numberId}>\n            <input\n              id={numberId}\n              placeholder=\"enter number\"\n              autoComplete=\"off\"\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <label className={s.label}>\n            <button className={s.btn} type=\"submit\">\n             add contact\n            </button>\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nPropTypes.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n\n  nameId: PropTypes.number,\n  numberId: PropTypes.number,\n\n  handleSubmit: PropTypes.func,\n  addContact: PropTypes.func,\n  handleChange: PropTypes.func,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ filteredContacts, onDelete }) => (\n  <ul className={s.list}>\n    {filteredContacts.map(({ name, number, id }) => (\n      <li className={s.listItem} key={id}>\n        <p className={s.name}>{name}:</p>\n        <p className={s.number}>{number}</p>\n        <button className={s.btn} type=\"button\" onClick={() => onDelete(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n","import React from 'react';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={s.wrap}>\n      <h3>Find contacts by name</h3>\n      <label>\n        <input type=\"text\" value={value} onChange={onChange} />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport './App.css';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = obj => {\n    const { contacts } = this.state;\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === obj.name.toLowerCase(),\n      )\n    ) {\n      return alert('This contact has already been added to the list');\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [obj, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <div className=\"App mainWrap\">\n        <h1>Phonebook</h1>\n        <ContactForm addContact={this.addContact}></ContactForm>\n        <h2>Contacts</h2>\n        <Filter\n          id={this.state.id}\n          value={this.state.filter}\n          onChange={this.changeFilter}\n        />\n        <ContactList\n          filteredContacts={filteredContacts}\n          onDelete={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3AeZQ\",\"listItem\":\"ContactList_listItem__1Z5vO\",\"name\":\"ContactList_name__RLLEh\",\"number\":\"ContactList_number__1T5-a\",\"btn\":\"ContactList_btn__2cdM1\",\"shake\":\"ContactList_shake__3-qfi\"};"],"sourceRoot":""}